/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as ctx from "../src/types"
import * as photon from "@generated/photon"
import { core } from "nexus"

declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  EventCreateInput: { // input type
    address?: string | null; // String
    createdAt?: any | null; // DateTime
    date: any; // DateTime!
    description?: string | null; // String
    id?: string | null; // ID
    participants?: NexusGenInputs['UserCreateManyWithoutParticipantsInput'] | null; // UserCreateManyWithoutParticipantsInput
    race?: boolean | null; // Boolean
    subtitle: string; // String!
    time?: string | null; // String
    title: string; // String!
    type: string; // String!
    updatedAt?: any | null; // DateTime
  }
  EventUpdateInput: { // input type
    address?: string | null; // String
    createdAt?: any | null; // DateTime
    date?: any | null; // DateTime
    description?: string | null; // String
    id?: string | null; // ID
    participants?: NexusGenInputs['UserUpdateManyWithoutEventsInput'] | null; // UserUpdateManyWithoutEventsInput
    race?: boolean | null; // Boolean
    subtitle?: string | null; // String
    time?: string | null; // String
    title?: string | null; // String
    type?: string | null; // String
    updatedAt?: any | null; // DateTime
  }
  EventWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  MutationUpdateOneEventFilter: { // input type
    every?: NexusGenInputs['MutationUpdateOneEventWhereInput'] | null; // MutationUpdateOneEventWhereInput
    none?: NexusGenInputs['MutationUpdateOneEventWhereInput'] | null; // MutationUpdateOneEventWhereInput
    some?: NexusGenInputs['MutationUpdateOneEventWhereInput'] | null; // MutationUpdateOneEventWhereInput
  }
  MutationUpdateOneEventWhereInput: { // input type
    AND?: NexusGenInputs['MutationUpdateOneEventWhereInput'][] | null; // [MutationUpdateOneEventWhereInput!]
    auth0Id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    email?: NexusGenInputs['StringFilter'] | null; // StringFilter
    events?: NexusGenInputs['MutationUpdateOneEventFilter'] | null; // MutationUpdateOneEventFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    name?: NexusGenInputs['NullableStringFilter'] | null; // NullableStringFilter
    NOT?: NexusGenInputs['MutationUpdateOneEventWhereInput'][] | null; // [MutationUpdateOneEventWhereInput!]
    OR?: NexusGenInputs['MutationUpdateOneEventWhereInput'][] | null; // [MutationUpdateOneEventWhereInput!]
    username?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  NullableStringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  UserCreateManyWithoutParticipantsInput: { // input type
    connect?: NexusGenInputs['UserWhereUniqueInput'][] | null; // [UserWhereUniqueInput!]
    create?: NexusGenInputs['UserCreateWithoutEventsInput'][] | null; // [UserCreateWithoutEventsInput!]
  }
  UserCreateWithoutEventsInput: { // input type
    auth0Id: string; // String!
    email: string; // String!
    id?: string | null; // ID
    name?: string | null; // String
    username: string; // String!
  }
  UserUpdateManyDataInput: { // input type
    auth0Id?: string | null; // String
    email?: string | null; // String
    id?: string | null; // ID
    name?: string | null; // String
    username?: string | null; // String
  }
  UserUpdateManyWithWhereNestedInput: { // input type
    data: NexusGenInputs['UserUpdateManyDataInput']; // UserUpdateManyDataInput!
    where: NexusGenInputs['MutationUpdateOneEventWhereInput']; // MutationUpdateOneEventWhereInput!
  }
  UserUpdateManyWithoutEventsInput: { // input type
    connect?: NexusGenInputs['UserWhereUniqueInput'][] | null; // [UserWhereUniqueInput!]
    create?: NexusGenInputs['UserCreateWithoutEventsInput'][] | null; // [UserCreateWithoutEventsInput!]
    delete?: NexusGenInputs['UserWhereUniqueInput'][] | null; // [UserWhereUniqueInput!]
    deleteMany?: NexusGenInputs['MutationUpdateOneEventWhereInput'][] | null; // [MutationUpdateOneEventWhereInput!]
    disconnect?: NexusGenInputs['UserWhereUniqueInput'][] | null; // [UserWhereUniqueInput!]
    set?: NexusGenInputs['UserWhereUniqueInput'][] | null; // [UserWhereUniqueInput!]
    update?: NexusGenInputs['UserUpdateWithWhereUniqueWithoutEventsInput'][] | null; // [UserUpdateWithWhereUniqueWithoutEventsInput!]
    updateMany?: NexusGenInputs['UserUpdateManyWithWhereNestedInput'][] | null; // [UserUpdateManyWithWhereNestedInput!]
    upsert?: NexusGenInputs['UserUpsertWithWhereUniqueWithoutEventsInput'][] | null; // [UserUpsertWithWhereUniqueWithoutEventsInput!]
  }
  UserUpdateWithWhereUniqueWithoutEventsInput: { // input type
    data: NexusGenInputs['UserUpdateWithoutEventsDataInput']; // UserUpdateWithoutEventsDataInput!
    where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
  }
  UserUpdateWithoutEventsDataInput: { // input type
    auth0Id?: string | null; // String
    email?: string | null; // String
    id?: string | null; // ID
    name?: string | null; // String
    username?: string | null; // String
  }
  UserUpsertWithWhereUniqueWithoutEventsInput: { // input type
    create: NexusGenInputs['UserCreateWithoutEventsInput']; // UserCreateWithoutEventsInput!
    update: NexusGenInputs['UserUpdateWithoutEventsDataInput']; // UserUpdateWithoutEventsDataInput!
    where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
  }
  UserWhereUniqueInput: { // input type
    auth0Id?: string | null; // String
    email?: string | null; // String
    id?: string | null; // ID
    username?: string | null; // String
  }
}

export interface NexusGenEnums {
  EventType: "Cycling" | "Karonkka" | "Meeting" | "Orienteering" | "Other" | "Running" | "Skiing" | "Spinning" | "Swimming" | "TrackRunning" | "Triathlon" | "Ultras"
}

export interface NexusGenRootTypes {
  AuthPayload: { // root type
    accessToken: string; // String!
    expiresIn: string; // String!
    idToken: string; // String!
  }
  Event: photon.Event;
  Mutation: {};
  Query: {};
  User: photon.User;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  EventCreateInput: NexusGenInputs['EventCreateInput'];
  EventUpdateInput: NexusGenInputs['EventUpdateInput'];
  EventWhereUniqueInput: NexusGenInputs['EventWhereUniqueInput'];
  MutationUpdateOneEventFilter: NexusGenInputs['MutationUpdateOneEventFilter'];
  MutationUpdateOneEventWhereInput: NexusGenInputs['MutationUpdateOneEventWhereInput'];
  NullableStringFilter: NexusGenInputs['NullableStringFilter'];
  StringFilter: NexusGenInputs['StringFilter'];
  UserCreateManyWithoutParticipantsInput: NexusGenInputs['UserCreateManyWithoutParticipantsInput'];
  UserCreateWithoutEventsInput: NexusGenInputs['UserCreateWithoutEventsInput'];
  UserUpdateManyDataInput: NexusGenInputs['UserUpdateManyDataInput'];
  UserUpdateManyWithWhereNestedInput: NexusGenInputs['UserUpdateManyWithWhereNestedInput'];
  UserUpdateManyWithoutEventsInput: NexusGenInputs['UserUpdateManyWithoutEventsInput'];
  UserUpdateWithWhereUniqueWithoutEventsInput: NexusGenInputs['UserUpdateWithWhereUniqueWithoutEventsInput'];
  UserUpdateWithoutEventsDataInput: NexusGenInputs['UserUpdateWithoutEventsDataInput'];
  UserUpsertWithWhereUniqueWithoutEventsInput: NexusGenInputs['UserUpsertWithWhereUniqueWithoutEventsInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  EventType: NexusGenEnums['EventType'];
}

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    accessToken: string; // String!
    expiresIn: string; // String!
    idToken: string; // String!
  }
  Event: { // field return type
    address: string | null; // String
    createdAt: any; // DateTime!
    date: any; // DateTime!
    description: string | null; // String
    id: string; // ID!
    participants: NexusGenRootTypes['User'][] | null; // [User!]
    race: boolean; // Boolean!
    subtitle: string; // String!
    time: string | null; // String
    title: string; // String!
    type: string; // String!
    updatedAt: any; // DateTime!
  }
  Mutation: { // field return type
    createEvent: NexusGenRootTypes['Event']; // Event!
    deleteEvent: NexusGenRootTypes['Event'] | null; // Event
    joinEvent: NexusGenRootTypes['Event']; // Event!
    login: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    signup: NexusGenRootTypes['User']; // User!
    unjoinEvent: NexusGenRootTypes['Event']; // Event!
    updateEvent: NexusGenRootTypes['Event'] | null; // Event
  }
  Query: { // field return type
    allEvents: NexusGenRootTypes['Event'][] | null; // [Event!]
    allUsers: NexusGenRootTypes['User'][] | null; // [User!]
    event: NexusGenRootTypes['Event'] | null; // Event
    user: NexusGenRootTypes['User'] | null; // User
  }
  User: { // field return type
    auth0Id: string; // String!
    email: string; // String!
    events: NexusGenRootTypes['Event'][] | null; // [Event!]
    id: string; // ID!
    name: string | null; // String
    username: string; // String!
  }
}

export interface NexusGenArgTypes {
  Event: {
    participants: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Mutation: {
    createEvent: { // args
      data: NexusGenInputs['EventCreateInput']; // EventCreateInput!
    }
    deleteEvent: { // args
      where: NexusGenInputs['EventWhereUniqueInput']; // EventWhereUniqueInput!
    }
    joinEvent: { // args
      eventId?: string | null; // ID
      username?: string | null; // String
    }
    login: { // args
      password?: string | null; // String
      username?: string | null; // String
    }
    signup: { // args
      email?: string | null; // String
      name?: string | null; // String
      password?: string | null; // String
      registerSecret?: string | null; // String
      username?: string | null; // String
    }
    unjoinEvent: { // args
      eventId?: string | null; // ID
      username?: string | null; // String
    }
    updateEvent: { // args
      data: NexusGenInputs['EventUpdateInput']; // EventUpdateInput!
      where: NexusGenInputs['EventWhereUniqueInput']; // EventWhereUniqueInput!
    }
  }
  Query: {
    allEvents: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    allUsers: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    event: { // args
      where: NexusGenInputs['EventWhereUniqueInput']; // EventWhereUniqueInput!
    }
    user: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
  }
  User: {
    events: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayload" | "Event" | "Mutation" | "Query" | "User";

export type NexusGenInputNames = "EventCreateInput" | "EventUpdateInput" | "EventWhereUniqueInput" | "MutationUpdateOneEventFilter" | "MutationUpdateOneEventWhereInput" | "NullableStringFilter" | "StringFilter" | "UserCreateManyWithoutParticipantsInput" | "UserCreateWithoutEventsInput" | "UserUpdateManyDataInput" | "UserUpdateManyWithWhereNestedInput" | "UserUpdateManyWithoutEventsInput" | "UserUpdateWithWhereUniqueWithoutEventsInput" | "UserUpdateWithoutEventsDataInput" | "UserUpsertWithWhereUniqueWithoutEventsInput" | "UserWhereUniqueInput";

export type NexusGenEnumNames = "EventType";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}