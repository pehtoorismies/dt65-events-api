### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AuthPayload {
  accessToken: String!
  expiresIn: String!
  idToken: String!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format
outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Event {
  createdAt: Date!
  creator: SimpleUser!
  date: Date!
  description: String

  """Id of the event"""
  id: String!
  participants: [SimpleUser!]!
  race: Boolean!
  subtitle: String
  time: String
  title: String!
  type: EventType!
  updatedAt: Date!
}

input EventData {
  date: String!
  description: String
  race: Boolean
  subtitle: String
  time: String
  title: String!
  type: String!
}

enum EventType {
  Cycling
  Karonkka
  Meeting
  Orienteering
  Other
  Running
  Skiing
  Spinning
  Swimming
  TrackRunning
  Triathlon
  Ultras
}

type Mutation {
  createEvent(addMe: Boolean = false, event: EventData): Event!
  deleteEvent(id: ID!): Boolean!
  forgotPassword(email: String!): Boolean!
  login(password: String!, usernameOrEmail: String!): AuthPayload!
  signup(email: String!, name: String!, password: String!, registerSecret: String!, username: String!): User!
  toggleJoinEvent(eventId: ID!): Event!
}

"""Queries"""
type Query {
  findEvent(id: ID!): Event!
  findManyEvents(limit: Int = 0): [Event!]!
  liveness: Boolean!
  me: User!
  readiness: Boolean!
}

type SimpleUser {
  """Id of the user"""
  id: String!
  username: String!
}

type User {
  auth0Id: String!
  createdAt: Date!
  email: String!

  """Id of the user"""
  id: String!
  name: String!
  updatedAt: Date!
  username: String!
}
